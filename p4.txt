
def RemoveOutlier(df,var):
    Q1 = df[var].quantile(0.25)
    Q3 = df[var].quantile(0.75)
    IQR = Q3-Q1
    high,low = Q3+1.5*IQR,Q1-1.5*IQR

    df = df[((df[var] >= low) & (df[var] <= high))]
    return df

def DisplayOutlier(df,msg):
    fig, axes = plt.subplots(1,2)
    fig.suptitle(msg)
    sns.boxplot(data=df,x='rm',ax=axes[0])
    sns.boxplot(data=df,x='lstat',ax=axes[1])
    fig.tight_layout()
    plt.show()

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import numpy as np

df = pd.read_csv('Boston.csv')

print(df.isnull().sum())

# removig outlirs
print('Finding Outlier')
DisplayOutlier(df,'Before')
df = RemoveOutlier(df,'rm')
df = RemoveOutlier(df,'lstat')
DisplayOutlier(df,'After')


# correlation matrix
sns.heatmap(df.corr(),annot=True)
plt.show()

x = df[['rm','lstat']]
y = df['medv']

x = df[['rm','lstat']]
y = df['medv']

from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(x,y,test_size=0.20, random_state=0)


from sklearn.linear_model import LinearRegression
model = LinearRegression().fit(x_train,y_train)
y_pred=model.predict(x_test)

# Display accuracy
from sklearn.metrics import mean_absolute_error
print(mean_absolute_error(y_test,y_pred))
print(model.score(x_test,y_test))

#predict house price
print('Predict house price by giving user input: \n')
features = np.array([[6,19]])
prediction = model.predict(features)
print('prediction: {}'.format(prediction))

                                                           