
import pandas as pd
import seaborn as sns
import numpy as np
import matplotlib.pyplot as plt

def Remove(df,var):
    Q1 = df[var].quantile(0.25)
    Q3 = df[var].quantile(0.75)
    IQR = Q3-Q1
    high,low = Q3+1.5*IQR, Q1-1.5*IQR

    df = df[((df[var] >= low) & (df[var] <= high))]
    return df

def Display(df,msg):
    fig, axes = plt.subplots(2,2)
    fig.suptitle(msg)
    sns.boxplot(data=df,x='sepal.length', ax=axes[0,0])
    sns.boxplot(data=df,x='sepal.width', ax=axes[0,1])
    sns.boxplot(data=df,x='petal.length', ax=axes[1,0])
    sns.boxplot(data=df,x='petal.width', ax=axes[1,1])
    fig.tight_layout()
    plt.show()

df = pd.read_csv('iris.csv')

print(df.isnull().sum())

#remobing outliers
Display(df,'Before')
df = Remove(df,'sepal.length')
df = Remove(df,'sepal.width')
df = Remove(df,'petal.length')
df = Remove(df,'petal.width')
Display(df,'After')

# label encoding
df['variety'] = df['variety'].astype('category')
df['variety'] = df['variety'].cat.codes

#correlation matrix
sns.heatmap(df.corr(),annot=True)
plt.show()

x = df.iloc[:,[0,1,2,3]].values
y = df.iloc[:, 4].values

# train and test data
from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(x,y,test_size = 0.20, random_state = 0)

#normalization
from sklearn.preprocessing import StandardScaler
sc = StandardScaler()
x_train = sc.fit_transform(x_train)
x_test = sc.fit_transform(x_test)

# bayes classifier
from sklearn.naive_bayes import GaussianNB
model = GaussianNB()
model.fit(x_train,y_train)
y_pred = model.predict(x_test)

# classification report
from sklearn.metrics import classification_report
print(classification_report(y_test, y_pred))


# confusion matrix
from sklearn.metrics import confusion_matrix
cm = confusion_matrix(y_test, y_pred)
print(cm)
sns.heatmap(cm,annot=True,linewidth=3, cmap='Blues')
plt.show()